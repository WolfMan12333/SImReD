#!/usr/sbin/nft -f

flush ruleset

table inet filter {
	chain input {
		type filter hook input priority 0;
		ct state established,related counter packets 0 bytes 0 accept
		ip protocol icmp icmp type { echo-request} counter packets 0 bytes 0 accept
		ip6 nexthdr ipv6-icmp icmpv6 type echo-request counter packets 0 bytes 0 accept
		ip6 nexthdr ipv6-icmp ip6 hoplimit 1 icmpv6 type { nd-neighbor-advert, nd-neighbor-solicit, nd-router-advert} accept
		ip6 nexthdr ipv6-icmp ip6 hoplimit 255 icmpv6 type { nd-neighbor-advert, nd-neighbor-solicit, nd-router-advert} accept
		tcp dport ssh ct state new tcp flags & (syn | ack) == syn counter packets 0 bytes 0 accept
		log prefix counter packets 0 bytes 0 drop
		tcp port ssh ct state new tcp flags & (syn | ack) == syn log prefix "inet/input/accept: " counter accept
	}
	chain forward {
		type filter hook forward priority 0;
	}
	chain output {
		type filter hook output priority 0;
	}
}

#IPv4 filtering
table ip filter {
	chain Input {
		type filter hook input priority 0;
		ct state established accept
		ct state related accept
		iif lo accept
		tcp dport ssh counter accept
		counter log drop
		ct state established,related counter packets 241 bytes 25193 accept
		counter packets 2 bytes 120 mark 0x00000100 accept
		icmp type { echo-request} counter packets 0 bytes 0 meta mark set 0x00000100 accept
		tcp dport ssh ct state new recent set
		tcp dport ssh ct state new recent update 60/seconds hitcount 10 counter drop
	}

	chain Output {
		type filter hook output priority 0;
		ct state established accept
		ct state related accept
		oif lo accept
		ct state new counter accept
	}

	chain Prerouting {
		ct state invalid counter drop
		tcp flags & (fin|syn|rst|ack) != syn ct state new counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop
		tcp flags & (fin|syn) == fin|syn counter drop
		tcp flags & (syn|rst) == syn|rst counter drop
		tcp flags & (fin|rst) == fin|rst counter drop
		tcp flags & (fin|ack) == fin counter drop
		tcp flags & (ack|urg) == urg counter drop
		tcp flags & (psh|ack) == psh counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|rst|psh|ack|urg counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == 0x0 counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|psh|urg counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|psh|urg counter drop
		tcp flags & (fin|syn|rst|psh|ack|urg) == fin|syn|rst|ack|urg counter drop
		ip saddr 224.0.0.0/3 counter drop
		ip saddr 169.254.0.0/16 counter drop
		ip saddr 172.16.0.0/12 counter drop
		ip saddr 192.0.2.0/24 counter drop
		ip saddr 192.168.0.0/16 counter drop
		ip saddr 10.0.0.0/8 counter drop
		ip saddr 0.0.0.0/8 counter drop
		ip saddr 240.0.0.0/5 counter drop
		iifname != lo ip saddr 127.0.0.0/8 counter drop
		ip protocol icmp counter jump drop
		ip protocol tcp ct state new limit rate 60/second burst 20 packets counter accept
		ip protocol tcp ct state new counter drop
		ip frag-off != 0 counter drop
		tcp flags & (rst) == rst limit rate 2/second burst 2 packets counter accept
		tcp flags & (rst) == rst counter drop
		tcp flags & (fin|syn|rst|ack) == rst limit rate 1/second burst 2 packets counter return
	}
}

#IPv6 filtering
table ip6 Filter {
	chain Input {
		type filter hook input priority 0;
		ct state  established,related counter packets 14 bytes 4077 accept
		iif lo accept
		tcp dport ssh counter accept
		icmpv6 type { nd-neighbor-solicit, echo-request, nd-router-advert, nd-neighbor-advert } accept
		counter log drop
		counter packets 4 bytes 408 mark 0x00000100 accept
		icmpv6 type echo-request counter packets 1 bytes 104 meta mark set 0x00000100
		icmpv6 type { nd-neighbor-advert, nd-neighbor-solicit, nd-router-advert} counter packets 2 bytes 224 meta mark set 0x00000100 accept
	}

	chain Output {
		type filter hook output priority 0;
		ct state established accept
		ct state related accept
		oif lo accept
		ct state new counter accept
	}
}
